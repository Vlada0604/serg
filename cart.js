// cart.js

/**
 * –û—Ç—Ä–∏–º—É—î –≤–º—ñ—Å—Ç –∫–æ—à–∏–∫–∞ –∑ localStorage.
 * @returns {Array} –ú–∞—Å–∏–≤ —Ç–æ–≤–∞—Ä—ñ–≤ —É –∫–æ—à–∏–∫—É.
 */
function getCart() {
    const cartJSON = localStorage.getItem('cart');
    // –ü–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤, —è–∫—â–æ –¥–∞–Ω—ñ —î, –∞–±–æ –ø—É—Å—Ç–∏–π –º–∞—Å–∏–≤, —è–∫—â–æ –Ω–µ–º–∞—î
    return cartJSON ? JSON.parse(cartJSON) : [];
}

/**
 * –ó–±–µ—Ä—ñ–≥–∞—î –ø–æ—Ç–æ—á–Ω–∏–π –≤–º—ñ—Å—Ç –∫–æ—à–∏–∫–∞ —É localStorage.
 * @param {Array} cart - –ú–∞—Å–∏–≤ —Ç–æ–≤–∞—Ä—ñ–≤.
 */
function saveCart(cart) {
    localStorage.setItem('cart', JSON.stringify(cart));
}

/**
 * –û–Ω–æ–≤–ª—é—î –ª—ñ—á–∏–ª—å–Ω–∏–∫ —Ç–æ–≤–∞—Ä—ñ–≤ —É —à–∞–ø—Ü—ñ —Å–∞–π—Ç—É.
 */
function updateCartDisplay() {
    const cart = getCart();
    // –ü—ñ–¥—Ä–∞—Ö–æ–≤—É—î –∑–∞–≥–∞–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—ñ–≤ —É –∫–æ—à–∏–∫—É
    const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
    
    // –ó–Ω–∞—Ö–æ–¥–∏—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –∫–æ—à–∏–∫ —É —à–∞–ø—Ü—ñ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, [üõí –ö–æ—à–∏–∫ (0)](cart.html))
    const cartLink = document.querySelector('a[href="cart.html"]'); 

    if (cartLink) {
        // –û–Ω–æ–≤–ª—é—î —Ç–µ–∫—Å—Ç –ø–æ—Å–∏–ª–∞–Ω–Ω—è
        cartLink.textContent = `üõí –ö–æ—à–∏–∫ (${totalItems})`;
    }
}

/**
 * –î–æ–¥–∞—î —Ç–æ–≤–∞—Ä –¥–æ –∫–æ—à–∏–∫–∞ –∞–±–æ –∑–±—ñ–ª—å—à—É—î –π–æ–≥–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å.
 * @param {string} name - –ù–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä—É.
 * @param {string} price - –¶—ñ–Ω–∞ —Ç–æ–≤–∞—Ä—É (—è–∫ —Ä—è–¥–æ–∫, –±—É–¥–µ –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–∞ –Ω–∞ —á–∏—Å–ª–æ).
 */
function addToCart(name, price) {
    const cart = getCart();
    const priceFloat = parseFloat(price);

    if (isNaN(priceFloat)) {
        console.error("–ù–µ–¥—ñ–π—Å–Ω–∞ —Ü—ñ–Ω–∞:", price);
        return;
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ç–æ–≤–∞—Ä –≤–∂–µ —î –≤ –∫–æ—à–∏–∫—É
    const existingItem = cart.find(item => item.name === name);

    if (existingItem) {
        existingItem.quantity += 1; // –¢–æ–≤–∞—Ä –∑–Ω–∞–π–¥–µ–Ω–æ, –∑–±—ñ–ª—å—à—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å
    } else {
        // –¢–æ–≤–∞—Ä –Ω–æ–≤–∏–π, –¥–æ–¥–∞—î–º–æ –π–æ–≥–æ
        cart.push({
            name: name,
            price: priceFloat,
            quantity: 1
        });
    }

    saveCart(cart); // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–∏–π –∫–æ—à–∏–∫
    updateCartDisplay(); // –û–Ω–æ–≤–ª—é—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫
    alert(`"${name}" –¥–æ–¥–∞–Ω–æ –¥–æ –∫–æ—à–∏–∫–∞!`); // –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
}

// –ó–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—Å—å–æ–≥–æ HTML
document.addEventListener('DOMContentLoaded', () => {
    updateCartDisplay(); // –û–Ω–æ–≤–ª—é—î–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏

    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –≤—Å—ñ –∫–Ω–æ–ø–∫–∏ –∑ –∫–ª–∞—Å–æ–º 'add-to-cart'
    const addButtons = document.querySelectorAll('.add-to-cart');

    addButtons.forEach(button => {
        button.addEventListener('click', () => {
            // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –ø—Ä–æ —Ç–æ–≤–∞—Ä –∑ –∞—Ç—Ä–∏–±—É—Ç—ñ–≤ –∫–Ω–æ–ø–∫–∏
            const productName = button.getAttribute('data-name');
            const productPrice = button.getAttribute('data-price');

            if (productName && productPrice) {
                addToCart(productName, productPrice);
            } else {
                console.error("–í—ñ–¥—Å—É—Ç–Ω—ñ –∞—Ç—Ä–∏–±—É—Ç–∏ data-name –∞–±–æ data-price –Ω–∞ –∫–Ω–æ–ø—Ü—ñ.");
            }
        });
    });
});
